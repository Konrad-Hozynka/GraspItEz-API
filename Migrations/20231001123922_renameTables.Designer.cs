// <auto-generated />
using System;
using GraspItEz.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraspItEz.Migrations
{
    [DbContext(typeof(GraspItEzContext))]
    [Migration("20231001123922_renameTables")]
    partial class renameTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraspItEz.Database.Query", b =>
                {
                    b.Property<int>("QueryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QueryId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AnswerStatus")
                        .HasColumnType("int");

                    b.Property<int>("QueryStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QuestionStatus")
                        .HasColumnType("int");

                    b.Property<int>("StudySetId")
                        .HasColumnType("int");

                    b.HasKey("QueryId");

                    b.HasIndex("StudySetId");

                    b.ToTable("Querist");
                });

            modelBuilder.Entity("GraspItEz.Database.QueryStatus", b =>
                {
                    b.Property<int>("QueryStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QueryStatusId"));

                    b.Property<string>("QueryStatusValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QueryStatusId");

                    b.ToTable("QueryStatuses");
                });

            modelBuilder.Entity("GraspItEz.Database.StudySet", b =>
                {
                    b.Property<int>("StudySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudySetId"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastUsed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("StudySetId");

                    b.ToTable("StudySets");
                });

            modelBuilder.Entity("GraspItEz.Database.Query", b =>
                {
                    b.HasOne("GraspItEz.Database.StudySet", null)
                        .WithMany("Querist")
                        .HasForeignKey("StudySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GraspItEz.Database.StudySet", b =>
                {
                    b.Navigation("Querist");
                });
#pragma warning restore 612, 618
        }
    }
}
