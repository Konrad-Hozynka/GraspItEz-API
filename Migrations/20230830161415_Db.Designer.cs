// <auto-generated />
using System;
using GraspItEz.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraspItEz.Migrations
{
    [DbContext(typeof(GraspItEzContext))]
    [Migration("20230830161415_Db")]
    partial class Db
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraspItEz.Database.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("DefinitionStatus")
                        .HasColumnType("int");

                    b.Property<string>("Quest")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("QuestStatus")
                        .HasColumnType("int");

                    b.Property<int>("QuestionStatusId")
                        .HasColumnType("int");

                    b.Property<int>("StudySetId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("StudySetId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("GraspItEz.Database.QuestionStatus", b =>
                {
                    b.Property<int>("QuestionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionStatusId"));

                    b.Property<string>("QuestionStatusValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionStatusId");

                    b.ToTable("QuestionStatuses");
                });

            modelBuilder.Entity("GraspItEz.Database.StudySet", b =>
                {
                    b.Property<int>("StudySetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudySetId"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastUsed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.HasKey("StudySetId");

                    b.ToTable("StudySets");
                });

            modelBuilder.Entity("GraspItEz.Database.Question", b =>
                {
                    b.HasOne("GraspItEz.Database.StudySet", null)
                        .WithMany("Questions")
                        .HasForeignKey("StudySetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GraspItEz.Database.StudySet", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
